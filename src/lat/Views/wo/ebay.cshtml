@using lat.Models
@model SafeItemList

@{ int count = 0; }


@using (Html.BeginForm("Ebay", "wo"))
{
    <br />
    <input type="text" name="searchWords" value="@ViewData["searchWords"]" />
    <input type="submit" value="Search eBay" />
    <br />
    <br />
    <b>Price higher than:</b>
    <input type="text" name="lower" />
    <b>Price lower than:</b>
    <input type="text" name="higher" />
    <input type="submit" name="filter" value="Filter" />

    <br />

    <br />

    List<SafeItem> sold = new List<SafeItem>();
    List<SafeItem> notSold = new List<SafeItem>();
    List<SafeItem> running = new List<SafeItem>();

    @for (int i = 0; i < Model.safeItems.Count; i++)
    {
        SafeItem item = Model.safeItems[i];

        @Html.HiddenFor(x => Model.safeItems[i].currentPrice)
        @Html.HiddenFor(x => Model.safeItems[i].title)
        @Html.HiddenFor(x => Model.safeItems[i].viewItemURL)
        @Html.HiddenFor(x => Model.safeItems[i].galleryURL)
        @Html.HiddenFor(x => Model.safeItems[i].sold)
        @Html.HiddenFor(x => Model.safeItems[i].quantitySold);

        switch (item.sold)
        {
            case "running":
                running.Add(item);
                break;
            case "not sold":
                notSold.Add(item);
                break;
            case "sold":
                sold.Add(item);
                break;
        }

    }


<body>
    <div style="width:50%;margin: 0 auto">
        <div>
            <canvas id="canvas"></canvas>
        </div>
    </div>
    <script>

        var scatterChartData = {
            datasets: [
			{
			label: "",//blank
			data:[{x:0,y:0}]}
			,{
			    label: "not sold (" + @notSold.Count + ")",
                data: [
                 @for (int i = 0; i < notSold.Count; i++)
                 {
                     
                        <text>
                        {
                            x: 1,
                            y: @notSold[i].currentPrice
                        },
                        </text>
                     
                 }
                ]
            }, {
                label: "sold (" + @sold.Count + ")",
                data: [
                    @for (int i = 0; i < sold.Count; i++)
                    {
                        
                        <text>
                        {
                            x: 2,
                            y: @sold[i].currentPrice
                        },
                        </text>
                        
                    }
               ]
            },{
                label: "running (" + @running.Count + ")" ,
                data: [                
                        @for (int i = 0; i < running.Count; i++)
                        {
                             <text>
                                {
                                    x: 3,
                                    y: @running[i].currentPrice
                                },
                                </text>
                            
                        }              
                ]
            }, {
			label: "",
			data:[{x:4,y:0}]}]
        };

        $.each(scatterChartData.datasets, function(i, dataset) {
            dataset.borderColor = 'rgba(0,0,0,0)';
            dataset.pointBorderColor = 'rgba(0,0,0,0)';
            dataset.pointBackgroundColor = 'rgba(0,0,0,0)';

        });


		var purple = 'rgb(173,0,204)';
		var clear = 'rgb(255,255,255)';
		var green = 'rgb(0,128,0)';
		var red = 'rgb(255,0,0)';
		var orange = 'rgb(255,128,64)';

		scatterChartData.datasets[0].pointBackgroundColor = clear; //space
		scatterChartData.datasets[1].pointBackgroundColor = red; //not sold
		scatterChartData.datasets[2].pointBackgroundColor = green; // sold
		scatterChartData.datasets[3].pointBackgroundColor = orange; //listing
		scatterChartData.datasets[4].pointBackgroundColor = clear;//space

		scatterChartData.datasets[0].backgroundColor = clear; //space
		scatterChartData.datasets[1].backgroundColor = red; //notsold
		scatterChartData.datasets[2].backgroundColor = green; // sold
		scatterChartData.datasets[3].backgroundColor = orange; //listing
		scatterChartData.datasets[4].backgroundColor = clear;//space

        window.onload = function() {
            var ctx = document.getElementById("canvas").getContext("2d");
            window.myScatter = Chart.Scatter(ctx, {
                data: scatterChartData,
                options: {
				//scaleShowLabels : false,
                    
                    scales: {
                        xAxes: [{
						display: false,
                            position: 'top',

                        }]

                    }
                }
            });

        };


    </script>
</body>


    <input type="hidden" name="searchWords" value="@ViewData["searchWords"]" />
    <br />



  

    int runningCount = 0;
    int notSoldCount = 0;
    int soldCount = 0;

    while (runningCount < running.Count || notSoldCount < notSold.Count || soldCount < sold.Count)
    {


        if (notSoldCount < notSold.Count)
        {
            SafeItem item = notSold[notSoldCount];

            <div class="outlne">
            <div id="white" class="col-sm-1 top-buffer nopadding ">
                <div>
                    <img src="@item.galleryURL" />
                </div >

            </div>

            <a href="@item.viewItemURL">
            <div class="col-sm-3 nopadding top-buffer borderRight">
                <div class="blue ">
                    @item.title<br /> <br /> Current Price: $@item.currentPrice
                    <br />
                    @if (!"0".Equals(item.quantitySold))
                    {
                        @item.quantitySold
                    }
                    <br />
                    @(item.sold)

                </div>
            </div>

            </a>

            </div>

            notSoldCount++;

        }
        else
        {
            <div class="outlne">
                <div id="white" class="col-sm-1 top-buffer nopadding ">
                  

                </div>
                <div id="white" class="col-sm-3 top-buffer nopadding borderRight">
                    

                </div>
                </div>
        }

        if (soldCount < sold.Count)
        {
            SafeItem item = sold[soldCount];
            <div class="outlne">
                <div id="white" class="col-sm-1 top-buffer nopadding ">
                    <div>
                        <img src="@item.galleryURL" />
                    </div>

                </div>

                <a href="@item.viewItemURL">
                    <div class="col-sm-3 nopadding top-buffer borderRight">
                        <div class="blue">
                            @item.title<br /> <br /> Current Price: $@item.currentPrice
                            <br />
                            @if (!"0".Equals(item.quantitySold))
                            {
                                @item.quantitySold
                            }
                            <br />
                            @(item.sold)

                        </div>
                    </div>

                </a>

            </div>
            soldCount++;

        }
        else
        {
            <div class="outlne">
                <div id="white" class="col-sm-1 top-buffer nopadding">
                

                </div>
                <div id="white" class="col-sm-3 top-buffer nopadding borderRight">
                  

                </div>
            </div>

        }

        if (runningCount < running.Count)
        {
            SafeItem item = running[runningCount];
            <div class="outlne">
                <div id="white" class="col-sm-1 top-buffer nopadding ">
                    <div >
                        <img src="@item.galleryURL" />
                    </div>

                </div>

                <a href="@item.viewItemURL">
                    <div class="col-sm-3 nopadding top-buffer">
                        <div class="blue">
                            @item.title<br /> <br /> Current Price: $@item.currentPrice
                            <br />
                            @if (!"0".Equals(item.quantitySold))
                            {
                                @item.quantitySold
                            }
                            <br />
                            @(item.sold)

                        </div>
                    </div>

                </a>

            </div>
            runningCount++;

        }
        else
        {
            <div class="outlne">
                <div id="white" class="col-sm-1 top-buffer nopadding">
                 

                </div>
                <div id="white" class="col-sm-3 top-buffer nopadding">
                   

                </div>
            </div>
        }

    }
}

