@using lat.Models
@model SafeItemList

@{ int count = 0; }


@using (Html.BeginForm("Ebay", "wo"))
{

    
    

}
@using (Html.BeginForm("Ebay", "wo"))
{
    <br />
    <input type="text" name="searchWords" value="@ViewData["searchWords"]" />
    <input type="submit" value="Search eBay" />
    <br />
    <br />
    <b>Price higher than:</b>
    <input type="text" name="lower" />
    <b>Price lower than:</b>
    <input type="text" name="higher" />
    <input type="submit" name="filter" value="Filter" />
    
    <br />

    <br />

<body>
    <div style="width:50%;margin: 0 auto">
        <div>
            <canvas id="canvas"></canvas>
        </div>
    </div>
    <script>

        var scatterChartData = {
            datasets: [
			{
			label: "",//blank
			data:[{x:0,y:0}]}
			,{
                label: "not sold",
                data: [
                 @for (int i = 0; i < Model.safeItems.Count; i++)
                {
                    if (Model.safeItems[i].sold.Equals("not sold")) {
                        <text>
                        {
                            x: 1,
                            y: @Model.safeItems[i].currentPrice
                        },
                        </text>
                    }
                }
                ]
            }, {
                label: "sold",
                data: [
                    @for (int i = 0; i < Model.safeItems.Count; i++)
                    {
                        if (Model.safeItems[i].sold.Equals("sold")) {
                        <text>
                        {
                            x: 2,
                            y: @Model.safeItems[i].currentPrice
                        },
                        </text>
                            }
                        }
               ]
            },{
                label: "listing",
                data: [                
                        @for (int i = 0; i < Model.safeItems.Count; i++)
                        {
                            if (Model.safeItems[i].sold.Equals("listing")) {
                                <text>
                                {
                                    x: 3,
                                    y: @Model.safeItems[i].currentPrice
                                },
                                </text>
                            }
                        }              
                ]
            }, {
			label: "",
			data:[{x:4,y:0}]}]
        };

        $.each(scatterChartData.datasets, function(i, dataset) {
            dataset.borderColor = 'rgba(0,0,0,0)';
            dataset.pointBorderColor = 'rgba(0,0,0,0)';
            dataset.pointBackgroundColor = 'rgba(0,0,0,0)';

        });


		var purple = 'rgb(173,0,204)';
		var clear = 'rgb(255,255,255)';
		var green = 'rgb(0,128,0)';
		var red = 'rgb(255,0,0)';
		var orange = 'rgb(255,128,64)';

		scatterChartData.datasets[0].pointBackgroundColor = clear; //space
		scatterChartData.datasets[1].pointBackgroundColor = red; //not sold
		scatterChartData.datasets[2].pointBackgroundColor = green; // sold
		scatterChartData.datasets[3].pointBackgroundColor = orange; //listing
		scatterChartData.datasets[4].pointBackgroundColor = clear;//space

		scatterChartData.datasets[0].backgroundColor = clear; //space
		scatterChartData.datasets[1].backgroundColor = red; //notsold
		scatterChartData.datasets[2].backgroundColor = green; // sold
		scatterChartData.datasets[3].backgroundColor = orange; //listing
		scatterChartData.datasets[4].backgroundColor = clear;//space

        window.onload = function() {
            var ctx = document.getElementById("canvas").getContext("2d");
            window.myScatter = Chart.Scatter(ctx, {
                data: scatterChartData,
                options: {
				//scaleShowLabels : false,
                    
                    scales: {
                        xAxes: [{
						display: false,
                            position: 'top',

                        }]

                    }
                }
            });

        };


    </script>
</body>


    <input type="hidden" name="searchWords" value="@ViewData["searchWords"]" />
    <br />
    
    

    @for (int i = 0; i < Model.safeItems.Count; i++)
    {
        SafeItem item = Model.safeItems[i];

        @Html.HiddenFor(x => Model.safeItems[i].currentPrice)
        @Html.HiddenFor(x => Model.safeItems[i].title)
        @Html.HiddenFor(x => Model.safeItems[i].viewItemURL)
        @Html.HiddenFor(x => Model.safeItems[i].galleryURL)
        @Html.HiddenFor(x => Model.safeItems[i].sold)
        @Html.HiddenFor(x => Model.safeItems[i].quantitySold);

        <div class="outlne">
            <div id="white" class="col-sm-2 top-buffer">
                <div class="top-buffer">
                    <img src="@item.galleryURL" />
                </div>

            </div>

            <a href="@item.viewItemURL">
                <div class="col-sm-4">
                    <div class="gray top-buffer">
                        @item.title <br /> <br /> Current Price: $@item.currentPrice
                        <br />
                        @if (!"0".Equals(item.quantitySold))
                        {
                            @item.quantitySold
                        }
                        <br />
                        @(item.sold)
                        
                    </div>
                </div>

            </a>
            <!--<r class="col-sm-3 select top-buffer" id="@(count)">@count</r>-->
        </div>


        count++;
    }

}

